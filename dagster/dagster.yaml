scheduler:
    module: dagster.core.scheduler
    class: DagsterDaemonScheduler
schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      username: { env: INSTANCE_USERNAME }
      password: { env: INSTANCE_PASSWORD }
      hostname: { env: INSTANCE_HOSTNAME }
      db_name: { env: DAGSTER_DB_NAME }
run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      username: { env: INSTANCE_USERNAME }
      password: { env: INSTANCE_PASSWORD }
      hostname: { env: INSTANCE_HOSTNAME }
      db_name: { env: DAGSTER_DB_NAME }
run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator
  config:
    max_concurrent_runs: 5
event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      username: { env: INSTANCE_USERNAME }
      password: { env: INSTANCE_PASSWORD }
      hostname: { env: INSTANCE_HOSTNAME }
      db_name: { env: DAGSTER_DB_NAME }
local_artifact_storage:
  module: dagster.core.storage.root
  class: LocalArtifactStorage
  config:
    base_dir: "/opt/dagster/local/"
telemetry:
  enabled: false